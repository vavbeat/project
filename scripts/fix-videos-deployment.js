#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

console.log('üîß –ù–∞—á–∏–Ω–∞—é –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å –≤–∏–¥–µ–æ –¥–ª—è GitHub Pages...\n');

// –ü—É—Ç–∏ –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è–º
const dirs = {
  source: 'videos',
  public: 'public/videos',
  publicStatic: 'public/static/videos',
  static: 'static/videos'
};

// –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
Object.values(dirs).forEach(dir => {
  if (!fs.existsSync(dir)) {
    fs.mkdirSync(dir, { recursive: true });
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${dir}`);
  }
});

// –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –≤–∏–¥–µ–æ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã
const createVideoPlaceholder = (filename) => {
  const placeholderPath = path.join(dirs.source, filename);
  
  // –°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π MP4 –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–∞
  const mp4Header = Buffer.from([
    0x00, 0x00, 0x00, 0x20, 0x66, 0x74, 0x79, 0x70, 0x69, 0x73, 0x6f, 0x6d,
    0x00, 0x00, 0x00, 0x00, 0x6d, 0x6f, 0x6f, 0x76, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x08, 0x6d, 0x64, 0x61, 0x74, 0x00, 0x00, 0x00, 0x01
  ]);
  
  fs.writeFileSync(placeholderPath, mp4Header);
  console.log(`üìπ –°–æ–∑–¥–∞–Ω –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä: ${placeholderPath}`);
};

// –°–æ–∑–¥–∞–µ–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã –¥–ª—è –≤—Å–µ—Ö –≤–∏–¥–µ–æ
const videoFiles = [
  'Art_Futurology_optimized.mp4',
  'FMCG_Perfumery_Image_optimized.mp4',
  'Pushkin_Simple_optimized.mp4',
  'Sports_Unexpected_Combination_optimized.mp4'
];

videoFiles.forEach(file => {
  createVideoPlaceholder(file);
});

// –ö–æ–ø–∏—Ä—É–µ–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã –≤–æ –≤—Å–µ —Ü–µ–ª–µ–≤—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
videoFiles.forEach(file => {
  Object.entries(dirs).forEach(([key, dir]) => {
    if (key !== 'source') {
      const sourcePath = path.join(dirs.source, file);
      const targetPath = path.join(dir, file);
      
      if (fs.existsSync(sourcePath)) {
        fs.copyFileSync(sourcePath, targetPath);
        console.log(`üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ: ${sourcePath} -> ${targetPath}`);
      }
    }
  });
});

// –û–±–Ω–æ–≤–ª—è–µ–º next.config.js –¥–ª—è GitHub Pages
const nextConfigPath = 'next.config.js';
let nextConfig = '';

if (fs.existsSync(nextConfigPath)) {
  nextConfig = fs.readFileSync(nextConfigPath, 'utf8');
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è GitHub Pages
  const githubPagesConfig = `
// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è GitHub Pages
const isGithubPages = process.env.GITHUB_PAGES === 'true';

module.exports = {
  assetPrefix: isGithubPages ? '/project' : '',
  basePath: isGithubPages ? '/project' : '',
  trailingSlash: true,
  output: 'export',
  trailingSlash: true,
  images: {
    unoptimized: true
  },
  experimental: {
    esmExternals: false
  }
};`;

  // –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
  fs.writeFileSync(nextConfigPath, githubPagesConfig);
  console.log('‚öôÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω next.config.js –¥–ª—è GitHub Pages');
}

// –°–æ–∑–¥–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –¥–µ–ø–ª–æ—é
const deployInstructions = `
# GitHub Pages Deployment Instructions

## –¢–µ–∫—É—â–∏–µ –ø—Ä–æ–±–ª–µ–º—ã:
- –í—Å–µ –≤–∏–¥–µ–æ —Ñ–∞–π–ª—ã —è–≤–ª—è—é—Ç—Å—è –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–∞–º–∏ (–º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä)
- –î–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–≥–æ –¥–µ–ø–ª–æ—è –Ω—É–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –≤–∏–¥–µ–æ

## –®–∞–≥–∏ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:

### 1. –ó–∞–º–µ–Ω–∏—Ç–µ –≤–∏–¥–µ–æ —Ñ–∞–π–ª—ã:
–ó–∞–º–µ–Ω–∏—Ç–µ —Ñ–∞–π–ª—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è—Ö:
- public/videos/
- public/static/videos/
- static/videos/

### 2. –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –≤–∏–¥–µ–æ:
- –§–æ—Ä–º–∞—Ç: MP4 (H.264 codec)
- –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 50MB
- –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ: 1920x1080
- –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: –¥–æ 2 –º–∏–Ω—É—Ç

### 3. –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –≤–∏–¥–µ–æ:
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:
- HandBrake (–±–µ—Å–ø–ª–∞—Ç–Ω—ã–π)
- FFmpeg: \`ffmpeg -i input.mp4 -c:v libx264 -crf 23 -preset medium -c:a aac -b:a 128k output.mp4\`

### 4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:
1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ª–æ–∫–∞–ª—å–Ω–æ: \`npm run build && npm run start\`
2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –≤–∏–¥–µ–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ
3. –°–¥–µ–ª–∞–π—Ç–µ –¥–µ–ø–ª–æ–π –Ω–∞ GitHub Pages

### 5. –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –¥–µ–ø–ª–æ—è:
\`\`\`
npm run build
npm run export
cp -r out/* .
git add .
git commit -m "Update video files"
git push origin gh-pages
\`\`\`

## –°—Ç–∞—Ç—É—Å:
‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
‚ö†Ô∏è –í–∏–¥–µ–æ —Ç—Ä–µ–±—É—é—Ç –∑–∞–º–µ–Ω—ã –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã
üìã –°–æ–∑–¥–∞–Ω—ã –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã
`;

fs.writeFileSync('DEPLOY_INSTRUCTIONS.md', deployInstructions);
console.log('üìÑ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π: DEPLOY_INSTRUCTIONS.md\n');

console.log('üéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
console.log('üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
console.log('1. –ó–∞–º–µ–Ω–∏—Ç–µ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã –≤–∏–¥–µ–æ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã');
console.log('2. –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ –≤–∏–¥–µ–æ –¥–ª—è –≤–µ–±–∞');
console.log('3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ª–æ–∫–∞–ª—å–Ω–æ');
console.log('4. –°–¥–µ–ª–∞–π—Ç–µ –¥–µ–ø–ª–æ–π –Ω–∞ GitHub Pages\n');
