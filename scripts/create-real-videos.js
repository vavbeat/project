#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

console.log('üé¨ –ù–∞—á–∏–Ω–∞—é —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –≤–∏–¥–µ–æ-–∑–∞–≥–ª—É—à–µ–∫...\n');

// –í–∏–¥–µ–æ—Ñ–∞–π–ª—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è
const videoConfigs = [
  {
    name: 'Art_Futurology_optimized.mp4',
    title: 'Art & Futurology',
    description: 'AI –≤ –∏—Å–∫—É—Å—Å—Ç–≤–µ –∏ —Ñ—É—Ç—É—Ä–æ–ª–æ–≥–∏–∏',
    color: '#FF6B6B'
  },
  {
    name: 'FMCG_Perfumery_Image_optimized.mp4',
    title: 'FMCG & Perfumery',
    description: '–†–∏—Ç–µ–π–ª –∏ –ø–∞—Ä—Ñ—é–º–µ—Ä–∏—è',
    color: '#4ECDC4'
  },
  {
    name: 'Pushkin_Simple_optimized.mp4',
    title: 'Pushkin Simple',
    description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞',
    color: '#45B7D1'
  },
  {
    name: 'Sports_Unexpected_Combination_optimized.mp4',
    title: 'Sports & Innovation',
    description: '–°–ø–æ—Ä—Ç –∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–∏',
    color: '#96CEB4'
  }
];

// –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å —Ç–µ–∫—Å—Ç–æ–º –¥–ª—è –≤–∏–¥–µ–æ
const createTextFile = (config) => {
  const textContent = `
<?xml version="1.0" encoding="utf-8"?>
<svg xmlns="http://www.w3.org/2000/svg" width="1280" height="720" viewBox="0 0 1280 720">
  <rect width="1280" height="720" fill="${config.color}"/>
  <text x="640" y="300" font-family="Arial, sans-serif" font-size="60" font-weight="bold" text-anchor="middle" fill="white">
    ${config.title}
  </text>
  <text x="640" y="380" font-family="Arial, sans-serif" font-size="32" text-anchor="middle" fill="white">
    ${config.description}
  </text>
  <text x="640" y="450" font-family="Arial, sans-serif" font-size="24" text-anchor="middle" fill="white" opacity="0.8">
    AI SMM Agency
  </text>
  <text x="640" y="500" font-family="Arial, sans-serif" font-size="18" text-anchor="middle" fill="white" opacity="0.6">
    –ö–µ–π—Å study
  </text>
</svg>
  `;
  
  const tempFile = `temp_${config.name}.svg`;
  fs.writeFileSync(tempFile, textContent);
  return tempFile;
};

// –°–æ–∑–¥–∞–µ–º –≤–∏–¥–µ–æ –∏–∑ SVG
const createVideoFromSVG = (svgFile, outputFile) => {
  try {
    const command = `ffmpeg -y -framerate 30 -i ${svgFile} -c:v libx264 -pix_fmt yuv420p -t 5 -vf "scale=1280:720" ${outputFile}`;
    execSync(command, { stdio: 'inherit' });
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ –≤–∏–¥–µ–æ: ${outputFile}`);
    return true;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–µ–æ ${outputFile}:`, error.message);
    return false;
  }
};

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
const createAllVideos = () => {
  const dirs = ['videos', 'public/videos', 'public/static/videos', 'static/videos'];
  let successCount = 0;
  let totalCount = 0;

  videoConfigs.forEach(config => {
    console.log(`üìπ –û–±—Ä–∞–±–æ—Ç–∫–∞: ${config.name}`);
    
    // –°–æ–∑–¥–∞–µ–º SVG —Ñ–∞–π–ª
    const svgFile = createTextFile(config);
    
    // –°–æ–∑–¥–∞–µ–º –≤–∏–¥–µ–æ –≤ –∫–∞–∂–¥–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    dirs.forEach(dir => {
      const outputPath = path.join(dir, config.name);
      totalCount++;
      
      if (createVideoFromSVG(svgFile, outputPath)) {
        successCount++;
      }
    });
    
    // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π SVG —Ñ–∞–π–ª
    if (fs.existsSync(svgFile)) {
      fs.unlinkSync(svgFile);
    }
    
    console.log(''); // –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
  });

  console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–µ–æ:`);
  console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ: ${successCount}/${totalCount} —Ñ–∞–π–ª–æ–≤`);
  console.log(`‚ùå –û—à–∏–±–æ–∫: ${totalCount - successCount}`);
  
  if (successCount === totalCount) {
    console.log('\nüéâ –í—Å–µ –≤–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!');
  } else {
    console.log('\n‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –≤–∏–¥–µ–æ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ.');
  }
};

// –ó–∞–ø—É—Å–∫
createAllVideos();
